---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/sa/pipeline-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  # pipeline is configured in the openshift-pipelines namespace as the default serviceaccount for pipelineruns
  # So let's use that as our primary serviceaccount
  # To change this setting, edit the configmap config-defaults in ns openshift-pipelines
  name: pipeline
secrets:
  - name: quay-auth-secret
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/event-notification/webhook-secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: webhook-secret
stringData:
  url: https://replace-me-with-an-external-secret.com
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-barista/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-barista-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-barista/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-barista-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-counter/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-counter-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-counter/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-counter-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customerloyalty/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-customerloyalty-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customerloyalty/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-customerloyalty-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customermocker/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-customermocker-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customermocker/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-customermocker-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-inventory/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-inventory-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-inventory/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-inventory-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-kitchen/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-kitchen-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-kitchen/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-kitchen-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-majestic-monolith-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-majestic-monolith-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-web/pvc/maven-source-pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-web-maven-settings-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-web/pvc/pvc.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quarkuscoffeeshop-web-shared-workspace-pvc
  namespace: quarkuscoffeeshop-cicd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/sa/pipeline-sa.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: admin
  namespace: quarkuscoffeeshop-demo
subjects:
  - kind: ServiceAccount
    name: pipeline
    namespace: quarkuscoffeeshop-cicd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
---
# Source: quarkuscoffeeshop-pipelines/templates/quay-auth-secret.yaml
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: quay-auth-secret
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: quay-auth-secret
    template:
      metadata:
        annotations:
          # Tekton magic, see https://tekton.dev/vault/pipelines-v0.15.2/auth/
          tekton.dev/docker-0: https://quay.io
      type: kubernetes.io/basic-auth
  dataFrom:
  - extract:
      key: secret/data/hub/imageregistry
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-barista/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-barista
  labels:
    app: quarkuscoffeeshop-barista
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-barista
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      type: string
      default: "main"

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-barista'
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-barista:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-barista:$(params.IMAGE_TAG) quarkuscoffeeshop-barista:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-barista-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-barista:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-barista:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-barista || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-barista-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-counter/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-counter
  labels:
    app: quarkuscoffeeshop-counter
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-counter
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      type: string
      default: "5.0.3-SNAPSHOT"

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-counter'
        - name: subdirectory
          value: ''
        - name: revision
          value: $(params.revision)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-counter:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-counter:$(params.IMAGE_TAG) quarkuscoffeeshop-counter:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-counter-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-counter:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-counter:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-counter || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-counter-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customerloyalty/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-customerloyalty
  labels:
    app: quarkuscoffeeshop-customerloyalty
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-customerloyalty
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      type: string
      default: 

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/customerloyalty'
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customerloyalty:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-customerloyalty:$(params.IMAGE_TAG) quarkuscoffeeshop-customerloyalty:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-customerloyalty-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customerloyalty:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-customerloyalty:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-customerloyalty || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-customerloyalty-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customermocker/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-customermocker
  labels:
    app: quarkuscoffeeshop-customermocker
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-customermocker
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      default: "master"
      type: string

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-customermocker'
        - name: subdirectory
          value: ''
        - name: revision
          value: $(params.revision)
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customermocker:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-customermocker:$(params.IMAGE_TAG) quarkuscoffeeshop-customermocker:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-customermocker-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customermocker:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-customermocker:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-customermocker || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-customermocker-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-inventory/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-inventory
  labels:
    app: quarkuscoffeeshop-inventory
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io /hybridcloudpatterns/quarkuscoffeeshop-inventory
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      default: "5.0.0-SNAPSHOT"
      type: string

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-inventory'
        - name: revision
          value: $(params.revision)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-inventory:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-inventory:$(params.IMAGE_TAG) quarkuscoffeeshop-inventory:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-inventory-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-inventory:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-inventory:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-inventory || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-inventory-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-kitchen/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-kitchen
  labels:
    app: quarkuscoffeeshop-kitchen
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-kitchen
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - name: revision
      default: "main"
      type: string

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-kitchen'
        - name: revision
          value: $(params.revision)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-kitchen:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-kitchen:$(params.IMAGE_TAG) quarkuscoffeeshop-kitchen:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-kitchen-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-kitchen:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-kitchen:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-kitchen || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-kitchen-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-majestic-monolith
  labels:
    app: quarkuscoffeeshop-majestic-monolith
  namespace: quarkuscoffeeshop-cicd
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-majestic-monolith
      name: quay-io-repository
      type: string
    - default: "master"
      name: revision
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-majestic-monolith'
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.revision)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG) quarkuscoffeeshop-majestic-monolith:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-majestic-monolith || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-majestic-monolith-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/pipeline/deploy-to-edge-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-to-edge
  labels:
    app: quarkuscoffeeshop-majestic-monolith
  namespace: quarkuscoffeeshop-cicd
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: main
      description: Select Branch 
      name: branch_name
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-majestic-monolith
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - default: webhook-secret
      description: Webhook secret name
      name: webhook-secret
      type: string
    - default: >-
        --patch={"spec":{"template":{"spec":{"containers":[{"name":"quarkuscoffeeshop-majestic-monolith","image":"image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)"}]}}}}
      description: patch image
      name: PATCH_IMAGE
      type: string
    - default: 192.168.1.10
      description: Ansible Tower Instance
      name: tower_host
      type: string
    - default: 10.0.1.20
      description:  Target Edge Device
      name: target_edge_device
      type: string
    - default: "25"
      description:  Ansible Tower Job Template Default is `Update quarkuscoffeeshop-majestic-monolith Application` the number is found in the URL
      name: tower_job_template
      type: string
    - default: "1"
      description:  Ansible Tower Inventory number is  found in url 
      name: tower_inventory
      type: string
    - default: "1"
      description:  Ansible Tower Credential number is  found in url 
      name: tower_credential
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/jeremyrdavis/quarkuscoffeeshop-majestic-monolith'
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: revision
          value: $(params.branch_name)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: ARGS
          value:
            - tag
            - 'quarkuscoffeeshop-majestic-monolith:$(params.IMAGE_TAG)'
            - 'quarkuscoffeeshop-majestic-monolith:latest'
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-to-test-env
      params:
        - name: ARGS
          value:
            - patch
            - deployment/quarkuscoffeeshop-majestic-monolith
            - $(params.PATCH_IMAGE)
            - '-n'
            - quarkuscoffeeshop-demo
      runAfter:
        - tag-test-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay
      params:
        - name: quay-io-repository
          value: $(params.quay-io-repository)
        - name: quay-io-image-tag-name
          value: $(params.quay-io-image-tag-name)
      resources:
        inputs:
          - name: image
            resource: image
      runAfter:
        - push-to-test-env
      taskRef:
        kind: Task
        name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay
    - name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay-latest
      params:
        - name: quay-io-repository
          value: $(params.quay-io-repository)
        - name: quay-io-image-tag-name
          value: latest
      resources:
        inputs:
          - name: image
            resource: image
      runAfter:
        - push-quarkuscoffeeshop-majestic-monolith-image-to-quay
      taskRef:
        kind: Task
        name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay-latest
    - name: send-to-webhook-slack
      params:
        - name: webhook-secret
          value: $(params.webhook-secret)
        - name: message
          value: >-
            Pipeline build pushed succesfully to 
            $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      runAfter:
        - push-quarkuscoffeeshop-majestic-monolith-image-to-quay-latest
      taskRef:
        kind: Task
        name: send-to-webhook-slack
    - name: deploy-application-to-edge
      taskRef:
        name: ansible-tower-cli
      params:
      - name: SSLVERIFY
        value: "false"
      - name: HOST
        value: $(params.tower_host)
      - name: tower-secret
        value: "tower-creds"
      - name: ARGS
        value:
          - job
          - launch
          - "--job-template"
          - "$(params.tower_job_template)"
          - "--extra-vars"
          - 'external_endpoint=$(params.target_edge_device)'
          - "--inventory"
          - "$(params.tower_inventory)"
          - --credential
          - "$(params.tower_credential)"
          - "--monitor"
      runAfter:
        - send-to-webhook-slack
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-web/pipeline/deploy-pipeline.yaml
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-quarkuscoffeeshop-web
  labels:
    app: quarkuscoffeeshop-web
spec:
  params:
    - default: latest
      description: Image Tag Value
      name: IMAGE_TAG
      type: string
    - default: quay.io/hybridcloudpatterns/quarkuscoffeeshop-web
      name: quay-io-repository
      type: string
    - default: latest
      name: quay-io-image-tag-name
      type: string
    - default: "5.0.3-SNAPSHOT"
      name: revision
      type: string

  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: 'https://github.com/hybrid-cloud-demos/quarkuscoffeeshop-web'
        - name: revision
          value: $(params.revision)
        - name: subdirectory
          value: ''
        - name: deleteExisting
          value: 'true'
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: maven-run
      params:
        - name: CONTEXT_DIR
          value: .
        - name: GOALS
          value:
            - '-DskipTests'
            - clean
            - package
      runAfter:
        - fetch-repository
      taskRef:
        kind: Task
        name: maven
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: shared-workspace
    - name: build-java-app-image
      params:
        - name: CONTEXT
          value: .
        - name: DOCKERFILE
          value: src/main/docker/Dockerfile.jvm
        - name: IMAGE
          value: >-
            image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-web:$(params.IMAGE_TAG)
        - name: TLSVERIFY
          value: 'false'
      runAfter:
        - maven-run
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: tag-test-image
      params:
        - name: SCRIPT
          value: |
            oc tag quarkuscoffeeshop-web:$(params.IMAGE_TAG) quarkuscoffeeshop-web:latest
      runAfter:
        - build-java-app-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: push-quarkuscoffeeshop-web-image-to-quay
      params:
        - name: srcImageURL
          value: "docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-web:$(params.IMAGE_TAG)"
        - name: destImageURL
          value: "docker://quay.io/hybridcloudpatterns/quarkuscoffeeshop-web:$(params.IMAGE_TAG)"
      runAfter:
        - tag-test-image
      taskRef:
        kind: Task
        name: skopeo-copy
    - name: push-to-test-env
      params:
        - name: SCRIPT
          value: |
            oc rollout restart -n quarkuscoffeeshop-demo deployment quarkuscoffeeshop-web || /bin/true
      runAfter:
        - push-quarkuscoffeeshop-web-image-to-quay
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/common-functions/tasks/maven.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: maven
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: build-tool
  namespace: quarkuscoffeeshop-cicd
spec:
  description: >-
    This Task can be used to run a Maven build.

  workspaces:
    - name: source
      description: The workspace consisting of maven project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom maven settings
        provided by the user.
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: maven:3.6.3-openjdk-11
    - name: GOALS
      description: maven goals to run
      type: array
      default:
        - "package"
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: ""
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
  steps:
    - name: mvn-settings
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.3
      script: |
        #!/usr/bin/env bash

        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \
        echo 'using existing $(workspaces.maven-settings.path)/settings.xml' && exit 0

        cat > $(workspaces.maven-settings.path)/settings.xml <<EOF
        <settings>
          <servers>
            <!-- The servers added here are generated from environment variables. Don't change. -->
            <!-- ### SERVER's USER INFO from ENV ### -->
          </servers>
          <mirrors>
            <!-- The mirrors added here are generated from environment variables. Don't change. -->
            <!-- ### mirrors from ENV ### -->
          </mirrors>
          <proxies>
            <!-- The proxies added here are generated from environment variables. Don't change. -->
            <!-- ### HTTP proxy from ENV ### -->
          </proxies>
        </settings>
        EOF

        xml=""
        if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ]; then
          xml="<proxy>\
            <id>genproxy</id>\
            <active>true</active>\
            <protocol>$(params.PROXY_PROTOCOL)</protocol>\
            <host>$(params.PROXY_HOST)</host>\
            <port>$(params.PROXY_PORT)</port>"
          if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
            xml="$xml\
                <username>$(params.PROXY_USER)</username>\
                <password>$(params.PROXY_PASSWORD)</password>"
          fi
          if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
            xml="$xml\
                <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
          fi
          xml="$xml\
              </proxy>"
          sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

        if [ -n "$(params.SERVER_USER)" -a -n "$(params.SERVER_PASSWORD)" ]; then
          xml="<server>\
            <id>serverid</id>"
          xml="$xml\
                <username>$(params.SERVER_USER)</username>\
                <password>$(params.SERVER_PASSWORD)</password>"
          xml="$xml\
              </server>"
          sed -i "s|<!-- ### SERVER's USER INFO from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

        if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
          xml="    <mirror>\
            <id>mirror.default</id>\
            <url>$(params.MAVEN_MIRROR_URL)</url>\
            <mirrorOf>central</mirrorOf>\
          </mirror>"
          sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

    - name: mvn-goals
      image: $(params.MAVEN_IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      command: ["/usr/bin/mvn"]
      args:
        - -s
        - $(workspaces.maven-settings.path)/settings.xml
        - "$(params.GOALS)"
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/common-functions/tasks/skopeo-copy-multi.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo-copy-multi
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: CLI
    tekton.dev/tags: cli
    tekton.dev/displayName: "skopeo copy"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.

    Skopeo doesn’t require a daemon to be running while performing its operations.
    In particular, the handy skopeo command called copy will ease the whole image
    copy operation. The copy command will take care of copying the image from
    internal.registry to production.registry. If your production registry requires
    credentials to login in order to push the image, skopeo can handle that as well.

  workspaces:
    - name: images-url
  params:
    - name: srcImageURL
      description: URL of the image to be copied to the destination registry
      type: string
      default: ""
    - name: destImageURL
      description: URL of the image where the image from source should be copied to
      type: string
      default: ""
    - name: srcTLSverify
      description: Verify the TLS on the src registry endpoint
      type: string
      default: "true"
    - name: destTLSverify
      description: Verify the TLS on the dest registry endpoint
      type: string
      default: "true"
  steps:
    - name: skopeo-copy
      env:
      - name: HOME
        value: /tekton/home
      image: quay.io/skopeo/stable:v1.9.0
      script: |
        # Function to copy multiple images.
        #
        copyimages() {
          filename="$(workspaces.images-url.path)/url.txt"
          while IFS= read -r line || [ -n "$line" ]
          do
            cmd=""
            for url in $line
            do
              # echo $url
              cmd="$cmd \
                  $url"
            done
            skopeo copy "$cmd" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
            echo "$cmd"
          done < "$filename"
        }
        #
        # If single image is to be copied then, it can be passed through
        # params in the taskrun.
        if [ "$(params.srcImageURL)" != "" ] && [ "$(params.destImageURL)" != "" ] ; then
          skopeo copy "$(params.srcImageURL)" "$(params.destImageURL)" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
        else
          # If file is provided as a configmap in the workspace then multiple images can be copied.
          #
          copyimages
        fi
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/common-functions/tasks/skopeo-copy.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: skopeo-copy
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: CLI
    tekton.dev/tags: cli
    tekton.dev/displayName: "skopeo copy"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.

    Skopeo doesn’t require a daemon to be running while performing its operations.
    In particular, the handy skopeo command called copy will ease the whole image
    copy operation. The copy command will take care of copying the image from
    internal.registry to production.registry. If your production registry requires
    credentials to login in order to push the image, skopeo can handle that as well.

  params:
    - name: srcImageURL
      description: URL of the image to be copied to the destination registry
      type: string
      default: ""
    - name: destImageURL
      description: URL of the image where the image from source should be copied to
      type: string
      default: ""
    - name: srcTLSverify
      description: Verify the TLS on the src registry endpoint
      type: string
      default: "true"
    - name: destTLSverify
      description: Verify the TLS on the dest registry endpoint
      type: string
      default: "true"
  steps:
    - name: skopeo-copy
      env:
      - name: HOME
        value: /tekton/home
      image: quay.io/skopeo/stable:v1.9.0
      script: |
        #
        # If single image is to be copied then, it can be passed through
        # params in the taskrun.
        if [ "$(params.srcImageURL)" != "" ] && [ "$(params.destImageURL)" != "" ] ; then
          skopeo copy "$(params.srcImageURL)" "$(params.destImageURL)" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
        else
          # If file is provided as a configmap in the workspace then multiple images can be copied.
          #
          copyimages
        fi
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/event-notification/send-to-webhook-slack.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: send-to-webhook-slack
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/tags: messaging
spec:
  description: >-
    These tasks post a simple message to a slack channel.

    This task uses Incoming Webhooks of slack to send the message.

  params:
  - name: webhook-secret
    type: string
    description: secret name of the slack app webhook URL (key is url)
  - name: message
    type: string
    description: plain text message
  steps:
  - name: post
    image: docker.io/curlimages/curl:7.68.0@sha256:99a8e9629b3ae26efb977e1a98f4786d6bd730c5ab4dea64632e297d7c3e7151 #tag: 7.68.0
    script: |
      #!/bin/sh
      /usr/bin/curl -X POST -H 'Content-type: application/json' --data '{"text":"$(params.message)"}' $URL
    env:
    - name: URL
      valueFrom:
        secretKeyRef:
          name: $(params.webhook-secret)
          key: url
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-barista/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-barista-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-barista
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-barista:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-barista:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-barista-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-barista-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-counter/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-counter-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-counter
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-counter:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-counter:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-counter-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-counter-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customerloyalty/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-customerloyalty-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-customerloyalty
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customerloyalty:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customerloyalty:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-customerloyalty-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-customerloyalty-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-customermocker/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-customermocker-image-to-quay
  namespace: quarkuscoffeeshop-cicd
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-customermocker
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customermocker:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-customermocker:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-customermocker-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-customermocker-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-inventory/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-inventory-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-inventory
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-inventory:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-inventory:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-inventory-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-inventory-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-kitchen/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-kitchen-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-kitchen
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-kitchen:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-kitchen:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-kitchen-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-kitchen-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/tektontasks/pushImageToQuay-latest.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay-latest
  namespace: quarkuscoffeeshop-cicd
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-majestic-monolith
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay-latest
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-majestic-monolith-pipeline-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-majestic-monolith/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay
  namespace: quarkuscoffeeshop-cicd
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-majestic-monolith
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-majestic-monolith:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-majestic-monolith-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-majestic-monolith-pipeline-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/quarkuscoffeeshop-web/tektontasks/pushImageToQuay.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: push-quarkuscoffeeshop-web-image-to-quay
spec:
  params:
    - default: quarkuscoffeeshop
      description: >-
        The quay.io account that matches the credentials stored in the mounted
        secret.
      name: quay-io-account
      type: string
    - default: quay.io/quarkuscoffeeshop/quarkuscoffeeshop-web
      description: The quay.io repository in which to store the image.
      name: quay-io-repository
      type: string
    - default: $(inputs.params.quay-io-image-tag-name)
      description: The tag to use to identify the image.
      name: quay-io-image-tag-name
      type: string
    - default: overlay
      description: The Buildah storage STORAGE_DRIVER
      name: STORAGE_DRIVER
      type: string
  steps:
    - command:
        - podman
        - pull
        - '--tls-verify=false'
        - >-
          docker://image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-web:$(inputs.params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/podman
      name: podman-pull-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - tag
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - >-
          image-registry.openshift-image-registry.svc:5000/quarkuscoffeeshop-cicd/quarkuscoffeeshop-web:$(inputs.params.quay-io-image-tag-name)
        - '$(params.quay-io-repository):$(params.quay-io-image-tag-name)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-tag-image
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - images
        - '--storage-driver=$(params.STORAGE_DRIVER)'
      image: registry.redhat.io/rhel8/buildah
      name: buildah-list-images-after-tagging
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /var/lib/containers
          name: pipeline-cache
    - command:
        - buildah
        - push
        - '--tls-verify=false'
        - '--storage-driver=$(params.STORAGE_DRIVER)'
        - '--authfile'
        - /etc/secret-volume/.dockerconfigjson
        - >-
          $(params.quay-io-repository):$(params.quay-io-image-tag-name)
      image: registry.redhat.io/rhel8/buildah
      name: push-quarkuscoffeeshop-web-image-to-quay
      securityContext:
        privileged: true
      volumeMounts:
        - mountPath: /etc/secret-volume
          name: quay-auth-secret
          readOnly: true
        - mountPath: /var/lib/containers
          name: pipeline-cache
      workingDir: /quay
  volumes:
    - name: quay-auth-secret
      secret:
        secretName: quay-auth-secret
    - name: pipeline-cache
      persistentVolumeClaim:
        claimName: quarkuscoffeeshop-web-shared-workspace-pvc
---
# Source: quarkuscoffeeshop-pipelines/templates/tekton-pipelines/event-notification/slack-alert.yml
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: run-send-to-webhook-slack
spec:
  params:
  - name: webhook-secret
    value: webhook-secret
  - name: message
    value: "Hello from Tekton!"
  taskRef:
    name: send-to-webhook-slack
